#elk-cluster集群配置文件
version: "3.8"

networks:
  elk:
    driver: bridge
 
services:
  #######################elasticsearch集群配置################
  es01:
    #镜像名称
    image: elasticsearch:7.12.0
    #容器名称
    container_name: elk-cluster-es01
    hostname: es01
    #开机自启动
    # restart: always
    privileged: true
    #环境变量设置
    environment:
      #节点名称
      - node.name=es01
      #集群名称
      - cluster.name=elk-cluster-es
      #其它节点
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      #加入跨域配置
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      #java堆内存大小设置
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      #开启读写权限
      - "TAKE_FILE_OWNERSHIP=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    #数据卷映射
    volumes:
      - /data/elk/elasticsearch/01/data:/usr/share/elasticsearch/data
      - /data/elk/elasticsearch/01/logs:/usr/share/elasticsearch/logs
    #端口映射
    ports:
      - 9200:9200
    #网络配置
    networks:
      - elk
      
  es02:
    image: elasticsearch:7.12.0
    container_name: elk-cluster-es02
    hostname: es02
    # restart: always
    privileged: true
    environment:
      - node.name=es02
      - cluster.name=elk-cluster-es
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      #加入跨域配置
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "TAKE_FILE_OWNERSHIP=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /data/elk/elasticsearch/02/data:/usr/share/elasticsearch/data
      - /data/elk/elasticsearch/02/logs:/usr/share/elasticsearch/logs
    #网络配置
    networks:
      - elk
      
  #####################kibana配置####################################
  kibana:
    image: kibana:7.12.0
    container_name: elk-cluster-kibana
    hostname: kibana
    # restart: always
    environment:
      #elasticsearch服务地址
      ELASTICSEARCH_HOSTS: "http://es01:9200"
      #kibana语言配置：en、zh-CN、ja-JP
      I18N_LOCALE: "en"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    #端口映射
    ports:
      - 5601:5601
    networks:
      - elk
    depends_on:
      - es01
      - es02
      
  #####################kibana配置####################################
  nginx:
    image: nginx:stable-alpine-perl
    container_name: elk-cluster-nginx
    hostname: nginx
    # restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    #端口映射
    ports:
      - 80:80
    networks:
      - elk
    depends_on:
      - kibana
      
  #####################logstash配置####################################
  logstash01:
    image: logstash:7.12.0
    container_name: elk-cluster-logstash01
    hostname: logstash01
    # restart: always
    environment:
      #elasticsearch服务地址
      - monitoring.elasticsearch.hosts="http://es01:9200"
    ports:
      - 9600:9600
      - 5044:5044
    networks:
      - elk
    depends_on:
      - es01
      - es02
    volumes:
      - "./config/logstash.yml:/usr/share/logstash/config/logstash.yml"
      - "./config/logstash.conf:/usr/share/logstash/config/logstash.conf"
      
  # logstash02:
  #   image: logstash:7.12.0
  #   container_name: elk-cluster-logstash02
  #   hostname: logstash02
  #   # restart: always
  #   environment:
  #     #elasticsearch服务地址
  #     - monitoring.elasticsearch.hosts="http://es01:9200"
  #   ports:
  #     - 9601:9600
  #     - 5045:5044
  #   networks:
  #     - elk
  #   depends_on:
  #     - es01
  #     - es02
      
  #####################kafka集群相关配置####################################
  #zookeeper集群
  zk01:
    image: zookeeper:3.7.0
    # restart: always
    container_name: elk-cluster-zk01
    hostname: zk01
    ports:
      - 2181:2181
    networks:
      - elk
    volumes:
      - "/data/elk/zookeeper/zk01/data:/data"
      - "/data/elk/zookeeper/zk01/logs:/logs"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zk02:2888:3888;2181
    depends_on:
      - es01
      - es02
 
  zk02:
    image: zookeeper:3.7.0
    # restart: always
    container_name: elk-cluster-zk02
    hostname: zk02
    ports:
      - 2182:2181
    networks:
      - elk
    volumes:
      - "/data/elk/zookeeper/zk02/data:/data"
      - "/data/elk/zookeeper/zk02/logs:/logs"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zk01:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181
    depends_on:
      - es01
      - es02
 
  # #kafka集群
  # kafka01:
  #   image: wurstmeister/kafka:2.13-2.7.0
  #   # restart: always
  #   container_name: elk-cluster-kafka01
  #   hostname: kafka01
  #   ports:
  #     - "9091:9092"
  #     - "9991:9991"
  #   networks:
  #     - elk
  #   depends_on:
  #     - zk01
  #     - zk02
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ADVERTISED_HOST_NAME: kafka01
  #     KAFKA_ADVERTISED_PORT: 9091
  #     KAFKA_HOST_NAME: kafka01
  #     KAFKA_ZOOKEEPER_CONNECT: zk01:2181,zk02:2181
  #     KAFKA_LISTENERS: PLAINTEXT://kafka01:9092
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.23.134:9091
  #     JMX_PORT: 9991
  #     KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=kafka01 -Dcom.sun.management.jmxremote.port=9991 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.managementote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false"
  #   volumes:
  #     - "/data/elk/kafka/kafka01/:/kafka"
 
  # kafka02:
  #   image: wurstmeister/kafka:2.13-2.7.0
  #   # restart: always
  #   container_name: elk-cluster-kafka02
  #   hostname: kafka02
  #   ports:
  #     - "9092:9092"
  #     - "9992:9992"
  #   networks:
  #     - elk
  #   depends_on:
  #     - zk01
  #     - zk02
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_ADVERTISED_HOST_NAME: kafka02
  #     KAFKA_ADVERTISED_PORT: 9092
  #     KAFKA_HOST_NAME: kafka02
  #     KAFKA_ZOOKEEPER_CONNECT: zk01:2181,zk02:2181
  #     KAFKA_LISTENERS: PLAINTEXT://kafka02:9092
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.23.134.134:9092
  #     JMX_PORT: 9992
  #     KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=kafka02 -Dcom.sun.management.jmxremote.port=9992 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.managementote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false"
  #   volumes:
  #     - "/data/elk/kafka/kafka02/:/kafka"
  
  # #kafka管理工具
  # 'kafka-manager':
  #   container_name: elk-cluster-kafka-manager
  #   image: sheepkiller/kafka-manager:stable
  #   # restart: always
  #   ports:
  #     - 9000:9000
  #   networks:
  #     - elk
  #   depends_on:
  #     - kafka01
  #     - kafka02
  #   environment:
  #     KM_VERSION: 1.3.3.18
  #     ZK_HOSTS: zk01:2181,zk02:2181
 
  # #kafka监控工具
  # 'kafka-offset-monitor':
  #   container_name: elk-cluster-kafka-offset-monitor
  #   image: 564239555/kafkaoffsetmonitor:latest
  #   # restart: always
  #   volumes:
  #     - /data/elk/kafkaoffsetmonitor/conf:/kafkaoffsetmonitor
  #   ports:
  #     - 9001:8080
  #   networks:
  #     - elk
  #   depends_on:
  #     - kafka01
  #     - kafka02
  #   environment:
  #     ZK_HOSTS: zk01:2181,zk02:2181
  #     KAFKA_BROKERS: kafka01:9092,kafka02:9092
  #     REFRESH_SECENDS: 10
  #     RETAIN_DAYS: 2
      
  # #######################filebeat配置################
  # filebaet:
  #   #镜像名称
  #   image: elastic/filebeat:7.12.0
  #   #容器名称
  #   container_name: elk-cluster-filebaet
  #   hostname: filebaet
  #   #开机自启动
  #   # restart: always
  #   volumes:
  #     - /data/elk/filebeat/data:/data/elk/logs
  #   #权限设置
  #   privileged: true
  #   #用户
  #   user: root
  #   #环境变量设置
  #   environment:
  #     #开启读写权限
  #     - "TAKE_FILE_OWNERSHIP=true"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   #网络配置
  #   networks:
  #     - elk 
  #   depends_on:
  #     - kafka01
  #     - kafka02

